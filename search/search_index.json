{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udcda Tech Lead & Technical Architect Interview Prep Welcome! This is your central hub for preparing for your transition from Senior Engineer to Tech Lead or Technical Architect. Below is a categorized list of topics and skills to master. \ud83d\ude80 Core Topics to Learn & Prepare \u2705 1. System Design High-Level Design (HLD) vs Low-Level Design (LLD) Design patterns (Factory, Singleton, Strategy, etc.) Scalable and fault-tolerant systems Microservices vs Monoliths Database design and sharding API design (REST, GraphQL, gRPC) Event-driven architecture Caching strategies (Redis, CDN) Load balancers & Reverse Proxies \u2705 2. Architecture Patterns & Concepts Clean Architecture / Hexagonal Architecture CQRS and Event Sourcing Domain-Driven Design (DDD) Message Brokers (Kafka, RabbitMQ) Service Mesh (Istio, Linkerd) \u2705 3. Cloud & DevOps Cloud Providers (AWS / Azure / GCP) CI/CD pipelines (Jenkins, GitHub Actions, etc.) Docker and Kubernetes Infrastructure as Code (Terraform, Pulumi) Monitoring & Logging (ELK, Prometheus, Grafana) \u2705 4. Leadership & Communication Technical decision-making Code reviews and mentorship Project estimation and planning Agile methodologies Conflict resolution and team collaboration \u2705 5. Language & Framework Mastery Advanced Java (Streams, Concurrency, Memory Mgmt) Spring/Spring Boot internals ORM & JPA tuning (Hibernate, etc.) Unit and Integration Testing (JUnit, Mockito) \u2705 6. Databases SQL tuning and indexing strategies NoSQL databases (MongoDB, Cassandra) Data modeling and relationships CAP theorem and consistency models \u2705 7. Security & Performance OAuth2, JWT, Role-based access control API rate limiting and throttling OWASP Top 10 Performance tuning (JVM, DB, Network) \u2705 8. Soft Skills Communication with stakeholders Technical documentation Interviewing and hiring Ownership mindset \ud83e\udded How to Use This Website Click on the topics above to go to detailed notes and study material. Use the checklist to track your progress. Add your own insights and notes as you go! \u201cA good architect is a good communicator, a continuous learner, and a strategic thinker.\u201d","title":"Home"},{"location":"#tech-lead-technical-architect-interview-prep","text":"Welcome! This is your central hub for preparing for your transition from Senior Engineer to Tech Lead or Technical Architect. Below is a categorized list of topics and skills to master.","title":"\ud83d\udcda Tech Lead &amp; Technical Architect Interview Prep"},{"location":"#core-topics-to-learn-prepare","text":"","title":"\ud83d\ude80 Core Topics to Learn &amp; Prepare"},{"location":"#1-system-design","text":"High-Level Design (HLD) vs Low-Level Design (LLD) Design patterns (Factory, Singleton, Strategy, etc.) Scalable and fault-tolerant systems Microservices vs Monoliths Database design and sharding API design (REST, GraphQL, gRPC) Event-driven architecture Caching strategies (Redis, CDN) Load balancers & Reverse Proxies","title":"\u2705 1. System Design"},{"location":"#2-architecture-patterns-concepts","text":"Clean Architecture / Hexagonal Architecture CQRS and Event Sourcing Domain-Driven Design (DDD) Message Brokers (Kafka, RabbitMQ) Service Mesh (Istio, Linkerd)","title":"\u2705 2. Architecture Patterns &amp; Concepts"},{"location":"#3-cloud-devops","text":"Cloud Providers (AWS / Azure / GCP) CI/CD pipelines (Jenkins, GitHub Actions, etc.) Docker and Kubernetes Infrastructure as Code (Terraform, Pulumi) Monitoring & Logging (ELK, Prometheus, Grafana)","title":"\u2705 3. Cloud &amp; DevOps"},{"location":"#4-leadership-communication","text":"Technical decision-making Code reviews and mentorship Project estimation and planning Agile methodologies Conflict resolution and team collaboration","title":"\u2705 4. Leadership &amp; Communication"},{"location":"#5-language-framework-mastery","text":"Advanced Java (Streams, Concurrency, Memory Mgmt) Spring/Spring Boot internals ORM & JPA tuning (Hibernate, etc.) Unit and Integration Testing (JUnit, Mockito)","title":"\u2705 5. Language &amp; Framework Mastery"},{"location":"#6-databases","text":"SQL tuning and indexing strategies NoSQL databases (MongoDB, Cassandra) Data modeling and relationships CAP theorem and consistency models","title":"\u2705 6. Databases"},{"location":"#7-security-performance","text":"OAuth2, JWT, Role-based access control API rate limiting and throttling OWASP Top 10 Performance tuning (JVM, DB, Network)","title":"\u2705 7. Security &amp; Performance"},{"location":"#8-soft-skills","text":"Communication with stakeholders Technical documentation Interviewing and hiring Ownership mindset","title":"\u2705 8. Soft Skills"},{"location":"#how-to-use-this-website","text":"Click on the topics above to go to detailed notes and study material. Use the checklist to track your progress. Add your own insights and notes as you go! \u201cA good architect is a good communicator, a continuous learner, and a strategic thinker.\u201d","title":"\ud83e\udded How to Use This Website"},{"location":"MatchRecordFlow/","text":"Match Process Flow View Flow Details Start \u27a4 Check Asynchronous Processing \u27a4 No Synchronous Processing Update Workflow State \u27a4 Yes \u27a4 Initialize Batch Variables batchCounter , batchNumber , recordsPerAsyncCall \u27a4 Loop through SourceRecordKeyList Parse SourceRecordKeyID Negative SourceRecordKeyID Handling Log and Skip Invalid Key Exception Thrown for Negative Key \u27a4 Get ProductKey and Catalog \u27a4 Set MASTERCATALOGID in pInput \u27a4 Check for Null Catalog Exception Thrown for Null Catalog \u27a4 Log Repository Information \u27a4 Convert Match Attribute Names to CIM Attributes ( convertAttributeNameToAttribute ) Check for Empty or Null Attribute Names Obtain Attribute Names from OmniHelper if catalogID > 0 and names are empty Return Attributes List if Obtained Check Catalog and Attribute Validity Catalog and Attribute Lookup Check for Weighted Attribute Handle Catalog Qualifier Create CIMAttribute from Attribute Add CIMAttribute to Match Attributes List \u27a4 No Matching Attributes Set No Matching Records Update Workflow State \u27a4 Check for Omni-Enabled Catalog Add Master Instances to SourceRecordKeyList \u27a4 Get Catalog Products ( cpList ) for Source Records \u27a4 Empty cpList Handling Set No Matching Records Update Workflow State \u27a4 Cross-Repository Match Set CROSS_REPOSITORY_MATCH Flag Get Target Matching Attributes \u27a4 Get Individual and Penalty Match Scores \u27a4 Ignore Non-Matching Records (if specified) \u27a4 Check for Index Entity Existence Exception Thrown for Non-Existent Index Entity \u27a4 Asynchronous Processing Create Batch Process Details \u27a4 Get Post-Processor Class Name \u27a4 Loop for Asynchronous Processing Batch Records for Asynchronous Processing Initialize Async Variables Create a List for Records to Be Matched Loop Through Source Records Add Record to List Increment Batch Counter Check if Batch Counter Reached Limit Yes Log and Process Batch Reset Batch Counter and Create a New List No Process Remaining Records in the Last Batch \u27a4 Process Remaining Records Asynchronously (if any) \u27a4 Not Asynchronous Log Synchronous Processing Start Create MatchActivityData Object Set Input Data: pUser , pInput , eventID , cpList , matchCIMAttributes , minMatchScore , dqProcessType , targetMatchingAttributes , individualScores , penaltyScores Set Additional Data: Ignore Non-Matching Records (if specified) Set Index Entity Information ( indexEntityName , indexEntityAttributesList ) Set Custom Data ( cpList , recordsTobeSkipped , postProcessorClassName ) Check if Omni is Enabled for the Catalog Remove Inactive Records (if applicable) Update Data with Inactive Records Removal Get Search Entity List Obtain Search Entity List Using Input Data Check if Search Entity List is Empty Yes Log and Skip Processing Set No Matching Records Update Workflow State No Set Custom Data: useCustomFlag , customNetricsQueryBuilderImpl , failOrEmptyPredicate , executeSequenceList , executeSequenceListFileName Set Source Search Entity List Match Records Using MatchResultBusinessDelegate Process Records Synchronously Log Processing Summary Log Synchronous Processing End \u27a4 Asynchronous Suspension Suspend Activity (if sourceMatchCount > recordsPerAsyncCall ) \u27a4 Update Workflow State End","title":"MatchFlow"},{"location":"MatchRecordFlow/#match-process-flow","text":"View Flow Details","title":"Match Process Flow"},{"location":"MatchRecordFlow/#start","text":"","title":"Start"},{"location":"MatchRecordFlow/#check-asynchronous-processing","text":"","title":"\u27a4 Check Asynchronous Processing"},{"location":"MatchRecordFlow/#no","text":"Synchronous Processing Update Workflow State","title":"\u27a4 No"},{"location":"MatchRecordFlow/#yes","text":"","title":"\u27a4 Yes"},{"location":"MatchRecordFlow/#initialize-batch-variables","text":"batchCounter , batchNumber , recordsPerAsyncCall","title":"\u27a4 Initialize Batch Variables"},{"location":"MatchRecordFlow/#loop-through-sourcerecordkeylist","text":"Parse SourceRecordKeyID Negative SourceRecordKeyID Handling Log and Skip Invalid Key Exception Thrown for Negative Key","title":"\u27a4 Loop through SourceRecordKeyList"},{"location":"MatchRecordFlow/#get-productkey-and-catalog","text":"","title":"\u27a4 Get ProductKey and Catalog"},{"location":"MatchRecordFlow/#set-mastercatalogid-in-pinput","text":"","title":"\u27a4 Set MASTERCATALOGID in pInput"},{"location":"MatchRecordFlow/#check-for-null-catalog","text":"Exception Thrown for Null Catalog","title":"\u27a4 Check for Null Catalog"},{"location":"MatchRecordFlow/#log-repository-information","text":"","title":"\u27a4 Log Repository Information"},{"location":"MatchRecordFlow/#convert-match-attribute-names-to-cim-attributes-convertattributenametoattribute","text":"Check for Empty or Null Attribute Names Obtain Attribute Names from OmniHelper if catalogID > 0 and names are empty Return Attributes List if Obtained Check Catalog and Attribute Validity Catalog and Attribute Lookup Check for Weighted Attribute Handle Catalog Qualifier Create CIMAttribute from Attribute Add CIMAttribute to Match Attributes List","title":"\u27a4 Convert Match Attribute Names to CIM Attributes (convertAttributeNameToAttribute)"},{"location":"MatchRecordFlow/#no-matching-attributes","text":"Set No Matching Records Update Workflow State","title":"\u27a4 No Matching Attributes"},{"location":"MatchRecordFlow/#check-for-omni-enabled-catalog","text":"Add Master Instances to SourceRecordKeyList","title":"\u27a4 Check for Omni-Enabled Catalog"},{"location":"MatchRecordFlow/#get-catalog-products-cplist-for-source-records","text":"","title":"\u27a4 Get Catalog Products (cpList) for Source Records"},{"location":"MatchRecordFlow/#empty-cplist-handling","text":"Set No Matching Records Update Workflow State","title":"\u27a4 Empty cpList Handling"},{"location":"MatchRecordFlow/#cross-repository-match","text":"Set CROSS_REPOSITORY_MATCH Flag Get Target Matching Attributes","title":"\u27a4 Cross-Repository Match"},{"location":"MatchRecordFlow/#get-individual-and-penalty-match-scores","text":"","title":"\u27a4 Get Individual and Penalty Match Scores"},{"location":"MatchRecordFlow/#ignore-non-matching-records-if-specified","text":"","title":"\u27a4 Ignore Non-Matching Records (if specified)"},{"location":"MatchRecordFlow/#check-for-index-entity-existence","text":"Exception Thrown for Non-Existent Index Entity","title":"\u27a4 Check for Index Entity Existence"},{"location":"MatchRecordFlow/#asynchronous-processing","text":"Create Batch Process Details","title":"\u27a4 Asynchronous Processing"},{"location":"MatchRecordFlow/#get-post-processor-class-name","text":"","title":"\u27a4 Get Post-Processor Class Name"},{"location":"MatchRecordFlow/#loop-for-asynchronous-processing","text":"Batch Records for Asynchronous Processing Initialize Async Variables Create a List for Records to Be Matched Loop Through Source Records Add Record to List Increment Batch Counter Check if Batch Counter Reached Limit Yes Log and Process Batch Reset Batch Counter and Create a New List No Process Remaining Records in the Last Batch","title":"\u27a4 Loop for Asynchronous Processing"},{"location":"MatchRecordFlow/#process-remaining-records-asynchronously-if-any","text":"","title":"\u27a4 Process Remaining Records Asynchronously (if any)"},{"location":"MatchRecordFlow/#not-asynchronous","text":"Log Synchronous Processing Start Create MatchActivityData Object Set Input Data: pUser , pInput , eventID , cpList , matchCIMAttributes , minMatchScore , dqProcessType , targetMatchingAttributes , individualScores , penaltyScores Set Additional Data: Ignore Non-Matching Records (if specified) Set Index Entity Information ( indexEntityName , indexEntityAttributesList ) Set Custom Data ( cpList , recordsTobeSkipped , postProcessorClassName ) Check if Omni is Enabled for the Catalog Remove Inactive Records (if applicable) Update Data with Inactive Records Removal Get Search Entity List Obtain Search Entity List Using Input Data Check if Search Entity List is Empty Yes Log and Skip Processing Set No Matching Records Update Workflow State No Set Custom Data: useCustomFlag , customNetricsQueryBuilderImpl , failOrEmptyPredicate , executeSequenceList , executeSequenceListFileName Set Source Search Entity List Match Records Using MatchResultBusinessDelegate Process Records Synchronously Log Processing Summary Log Synchronous Processing End","title":"\u27a4 Not Asynchronous"},{"location":"MatchRecordFlow/#asynchronous-suspension","text":"Suspend Activity (if sourceMatchCount > recordsPerAsyncCall )","title":"\u27a4 Asynchronous Suspension"},{"location":"MatchRecordFlow/#update-workflow-state","text":"","title":"\u27a4 Update Workflow State"},{"location":"MatchRecordFlow/#end","text":"","title":"End"},{"location":"RestAPI/","text":"","title":"RestAPI"}]}